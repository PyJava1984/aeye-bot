<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.bot.web.service.dao.ChatMessageMapper" >
  <resultMap id="BaseResultMap" type="com.ai.bot.web.service.entity.ChatMessage" >
    <id column="message_id" property="messageId" jdbcType="BIGINT" />
    <result column="account_ref" property="accountRef" jdbcType="VARCHAR" />
    <result column="from_account" property="fromAccount" jdbcType="VARCHAR" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="to_account" property="toAccount" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    message_id, account_ref, from_account, send_time, message, to_account
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.bot.web.service.entity.ChatMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from chat_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from chat_message
    where message_id = #{messageId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from chat_message
    where message_id = #{messageId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ai.bot.web.service.entity.ChatMessage" >
    insert into chat_message (message_id, account_ref, from_account, 
      send_time, message, to_account
      )
    values (#{messageId,jdbcType=BIGINT}, #{accountRef,jdbcType=VARCHAR}, #{fromAccount,jdbcType=VARCHAR}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{message,jdbcType=VARCHAR}, #{toAccount,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.bot.web.service.entity.ChatMessage" >
    insert into chat_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="accountRef != null" >
        account_ref,
      </if>
      <if test="fromAccount != null" >
        from_account,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="toAccount != null" >
        to_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=BIGINT},
      </if>
      <if test="accountRef != null" >
        #{accountRef,jdbcType=VARCHAR},
      </if>
      <if test="fromAccount != null" >
        #{fromAccount,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="toAccount != null" >
        #{toAccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.bot.web.service.entity.ChatMessage" >
    update chat_message
    <set >
      <if test="accountRef != null" >
        account_ref = #{accountRef,jdbcType=VARCHAR},
      </if>
      <if test="fromAccount != null" >
        from_account = #{fromAccount,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="toAccount != null" >
        to_account = #{toAccount,jdbcType=VARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.bot.web.service.entity.ChatMessage" >
    update chat_message
    set account_ref = #{accountRef,jdbcType=VARCHAR},
      from_account = #{fromAccount,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=VARCHAR},
      to_account = #{toAccount,jdbcType=VARCHAR}
    where message_id = #{messageId,jdbcType=BIGINT}
  </update>
</mapper>