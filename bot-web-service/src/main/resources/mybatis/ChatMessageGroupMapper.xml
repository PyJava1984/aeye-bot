<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.bot.web.service.dao.ChatMessageGroupMapper" >
  <resultMap id="BaseResultMap" type="com.ai.bot.web.service.entity.ChatMessageGroup" >
    <id column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="account_ids" property="accountIds" jdbcType="VARCHAR" />
    <result column="ids_count" property="idsCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    group_id, title, account_ids, ids_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.bot.web.service.entity.ChatMessageGroupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from chat_message_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from chat_message_group
    where group_id = #{groupId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from chat_message_group
    where group_id = #{groupId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ai.bot.web.service.entity.ChatMessageGroup" >
    insert into chat_message_group (group_id, title, account_ids, 
      ids_count)
    values (#{groupId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{accountIds,jdbcType=VARCHAR}, 
      #{idsCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.bot.web.service.entity.ChatMessageGroup" >
    insert into chat_message_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="accountIds != null" >
        account_ids,
      </if>
      <if test="idsCount != null" >
        ids_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="accountIds != null" >
        #{accountIds,jdbcType=VARCHAR},
      </if>
      <if test="idsCount != null" >
        #{idsCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.bot.web.service.entity.ChatMessageGroup" >
    update chat_message_group
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="accountIds != null" >
        account_ids = #{accountIds,jdbcType=VARCHAR},
      </if>
      <if test="idsCount != null" >
        ids_count = #{idsCount,jdbcType=INTEGER},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.bot.web.service.entity.ChatMessageGroup" >
    update chat_message_group
    set title = #{title,jdbcType=VARCHAR},
      account_ids = #{accountIds,jdbcType=VARCHAR},
      ids_count = #{idsCount,jdbcType=INTEGER}
    where group_id = #{groupId,jdbcType=INTEGER}
  </update>
</mapper>