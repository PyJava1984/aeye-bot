<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.bot.web.service.dao.TodoItemMapper" >
  <resultMap id="BaseResultMap" type="com.ai.bot.web.service.entity.TodoItem" >
    <id column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
    <result column="all_day" property="allDay" jdbcType="BIT" />
    <result column="importance" property="importance" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    item_id, account_id, title, start_time, end_time, all_day, importance, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.bot.web.service.entity.TodoItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from todo_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from todo_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from todo_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ai.bot.web.service.entity.TodoItem" >
    insert into todo_item (item_id, account_id, title, 
      start_time, end_time, all_day, 
      importance, state)
    values (#{itemId,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{allDay,jdbcType=BIT}, 
      #{importance,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.bot.web.service.entity.TodoItem" >
    insert into todo_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="allDay != null" >
        all_day,
      </if>
      <if test="importance != null" >
        importance,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="allDay != null" >
        #{allDay,jdbcType=BIT},
      </if>
      <if test="importance != null" >
        #{importance,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.bot.web.service.entity.TodoItem" >
    update todo_item
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="allDay != null" >
        all_day = #{allDay,jdbcType=BIT},
      </if>
      <if test="importance != null" >
        importance = #{importance,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.bot.web.service.entity.TodoItem" >
    update todo_item
    set account_id = #{accountId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      all_day = #{allDay,jdbcType=BIT},
      importance = #{importance,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>