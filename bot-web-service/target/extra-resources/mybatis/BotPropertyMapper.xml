<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.bot.web.service.dao.BotPropertyMapper" >
  <resultMap id="BaseResultMap" type="com.ai.bot.web.service.entity.BotProperty" >
    <id column="property_id" property="propertyId" jdbcType="INTEGER" />
    <result column="bot_type" property="botType" jdbcType="VARCHAR" />
    <result column="bot_property_name" property="botPropertyName" jdbcType="VARCHAR" />
    <result column="property_words" property="propertyWords" jdbcType="VARCHAR" />
    <result column="bot_property_value" property="botPropertyValue" jdbcType="VARCHAR" />
    <result column="data_type" property="dataType" jdbcType="VARCHAR" />
    <result column="part_of_speech" property="partOfSpeech" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    property_id, bot_type, bot_property_name, property_words, bot_property_value, data_type, 
    part_of_speech
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.bot.web.service.entity.BotPropertyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from bot_property
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bot_property
    where property_id = #{propertyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bot_property
    where property_id = #{propertyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ai.bot.web.service.entity.BotProperty" >
    insert into bot_property (property_id, bot_type, bot_property_name, 
      property_words, bot_property_value, data_type, 
      part_of_speech)
    values (#{propertyId,jdbcType=INTEGER}, #{botType,jdbcType=VARCHAR}, #{botPropertyName,jdbcType=VARCHAR}, 
      #{propertyWords,jdbcType=VARCHAR}, #{botPropertyValue,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, 
      #{partOfSpeech,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.bot.web.service.entity.BotProperty" >
    insert into bot_property
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="propertyId != null" >
        property_id,
      </if>
      <if test="botType != null" >
        bot_type,
      </if>
      <if test="botPropertyName != null" >
        bot_property_name,
      </if>
      <if test="propertyWords != null" >
        property_words,
      </if>
      <if test="botPropertyValue != null" >
        bot_property_value,
      </if>
      <if test="dataType != null" >
        data_type,
      </if>
      <if test="partOfSpeech != null" >
        part_of_speech,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="propertyId != null" >
        #{propertyId,jdbcType=INTEGER},
      </if>
      <if test="botType != null" >
        #{botType,jdbcType=VARCHAR},
      </if>
      <if test="botPropertyName != null" >
        #{botPropertyName,jdbcType=VARCHAR},
      </if>
      <if test="propertyWords != null" >
        #{propertyWords,jdbcType=VARCHAR},
      </if>
      <if test="botPropertyValue != null" >
        #{botPropertyValue,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="partOfSpeech != null" >
        #{partOfSpeech,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.bot.web.service.entity.BotProperty" >
    update bot_property
    <set >
      <if test="botType != null" >
        bot_type = #{botType,jdbcType=VARCHAR},
      </if>
      <if test="botPropertyName != null" >
        bot_property_name = #{botPropertyName,jdbcType=VARCHAR},
      </if>
      <if test="propertyWords != null" >
        property_words = #{propertyWords,jdbcType=VARCHAR},
      </if>
      <if test="botPropertyValue != null" >
        bot_property_value = #{botPropertyValue,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="partOfSpeech != null" >
        part_of_speech = #{partOfSpeech,jdbcType=VARCHAR},
      </if>
    </set>
    where property_id = #{propertyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.bot.web.service.entity.BotProperty" >
    update bot_property
    set bot_type = #{botType,jdbcType=VARCHAR},
      bot_property_name = #{botPropertyName,jdbcType=VARCHAR},
      property_words = #{propertyWords,jdbcType=VARCHAR},
      bot_property_value = #{botPropertyValue,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      part_of_speech = #{partOfSpeech,jdbcType=VARCHAR}
    where property_id = #{propertyId,jdbcType=INTEGER}
  </update>
</mapper>